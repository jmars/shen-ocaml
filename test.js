// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Obj = require("bs-platform/lib/js/obj.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Hashtbl = require("bs-platform/lib/js/hashtbl.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var Exn = Caml_exceptions.create("Test.Shen'1.Exn");

var functions = Hashtbl.create(undefined, 255);

var globals = Hashtbl.create(undefined, 255);

function assert_function(x) {
  if ((x.tag | 0) === Obj.closure_tag) {
    return x;
  } else {
    throw [
          Exn,
          "Invalid function application"
        ];
  }
}

function define(n, f) {
  return Hashtbl.add(functions, n, f);
}

function assert_bool(s) {
  if (s.tag === 2) {
    return s[0];
  } else {
    throw [
          Exn,
          "Expected a bool"
        ];
  }
}

var Shen$prime1 = /* module */[
  /* Exn */Exn,
  /* functions */functions,
  /* globals */globals,
  /* assert_function */assert_function,
  /* define */define,
  /* assert_bool */assert_bool
];

Hashtbl.add(functions, "add", (function (x, x$1) {
        return x$1;
      }));

Curry._2(Hashtbl.find(functions, "add"), /* Number */Block.__(3, [1]), /* Number */Block.__(3, [2]));

exports.Shen$prime1 = Shen$prime1;
/* functions Not a pure module */
